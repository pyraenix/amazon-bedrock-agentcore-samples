# LlamaIndex + AgentCore Browser Tool Environment Configuration
# Copy this file to .env and fill in your actual values

# =============================================================================
# AWS Configuration (Required)
# =============================================================================

# AWS Credentials - Option 1: Use Access Keys
# Get these from AWS Console > IAM > Users > Security Credentials
AWS_ACCESS_KEY_ID=your_aws_access_key_here
AWS_SECRET_ACCESS_KEY=your_aws_secret_key_here

# AWS Region - Choose the region where you want to run AgentCore and Bedrock
# Common regions: us-east-1, us-west-2, eu-west-1
AWS_DEFAULT_REGION=us-east-1

# AWS Session Token (Optional - only needed for temporary credentials)
# AWS_SESSION_TOKEN=your_session_token_here

# =============================================================================
# Amazon Bedrock Configuration
# =============================================================================

# Bedrock Region (can be different from AWS_DEFAULT_REGION if needed)
BEDROCK_REGION=us-east-1

# Default Bedrock Model for LlamaIndex LLM
# Available models: anthropic.claude-3-sonnet-20240229-v1:0, anthropic.claude-3-haiku-20240307-v1:0
BEDROCK_MODEL_ID=anthropic.claude-3-sonnet-20240229-v1:0

# Default Bedrock Vision Model for Multi-Modal Analysis
BEDROCK_VISION_MODEL_ID=anthropic.claude-3-sonnet-20240229-v1:0

# =============================================================================
# AgentCore Browser Tool Configuration
# =============================================================================

# AgentCore Region (should match AWS region for best performance)
AGENTCORE_REGION=us-east-1

# Browser Session Timeout (in seconds)
AGENTCORE_SESSION_TIMEOUT=3600

# Browser Viewport Settings
BROWSER_VIEWPORT_WIDTH=1920
BROWSER_VIEWPORT_HEIGHT=1080

# =============================================================================
# LlamaIndex Configuration
# =============================================================================

# LlamaIndex Cache Directory (optional - for performance)
LLAMAINDEX_CACHE_DIR=./cache

# LlamaIndex Logging Level (DEBUG, INFO, WARNING, ERROR)
LLAMAINDEX_LOG_LEVEL=INFO

# =============================================================================
# CAPTCHA Handling Configuration
# =============================================================================

# Directory for saving CAPTCHA screenshots
CAPTCHA_SCREENSHOT_DIR=./captcha_screenshots

# Maximum retry attempts for CAPTCHA solving
CAPTCHA_MAX_RETRIES=3

# Timeout for CAPTCHA detection (in seconds)
CAPTCHA_DETECTION_TIMEOUT=30

# Confidence threshold for CAPTCHA solutions (0.0 to 1.0)
CAPTCHA_CONFIDENCE_THRESHOLD=0.7

# =============================================================================
# Development & Testing Configuration
# =============================================================================

# Environment (development, staging, production)
ENVIRONMENT=development

# Enable debug mode (true/false)
DEBUG_MODE=true

# Test mode - use mock services instead of real AWS calls (true/false)
TEST_MODE=false

# Log file path (optional)
LOG_FILE_PATH=./logs/llamaindex_captcha.log

# =============================================================================
# Performance & Monitoring Configuration
# =============================================================================

# Enable performance monitoring (true/false)
ENABLE_PERFORMANCE_MONITORING=true

# Enable detailed request logging (true/false)
ENABLE_REQUEST_LOGGING=false

# Maximum concurrent browser sessions
MAX_CONCURRENT_SESSIONS=5

# Request timeout (in seconds)
REQUEST_TIMEOUT=60

# =============================================================================
# Security Configuration
# =============================================================================

# Enable SSL verification (true/false) - keep true for production
SSL_VERIFY=true

# User Agent for browser sessions
USER_AGENT=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36

# =============================================================================
# Optional: Alternative AWS Configuration Methods
# =============================================================================

# Option 2: AWS Profile (alternative to access keys)
# If you have AWS CLI configured with profiles, uncomment and set:
# AWS_PROFILE=your_aws_profile_name

# Option 3: IAM Role (for EC2/ECS/Lambda environments)
# If running on AWS infrastructure with IAM roles, you can leave credentials empty
# and the SDK will automatically use the instance/task role

# =============================================================================
# Usage Instructions
# =============================================================================

# 1. Copy this file: cp .env.template .env
# 2. Fill in your AWS credentials (choose one method above)
# 3. Adjust regions and model IDs as needed
# 4. Customize CAPTCHA and performance settings
# 5. Keep .env file secure and never commit it to version control

# Required AWS Permissions:
# - BedrockAgentCoreFullAccess (managed policy)
# - AmazonBedrockFullAccess (managed policy)
# - Custom policy for specific Bedrock models if using fine-grained permissions

# Verification Commands:
# - Test AWS access: aws sts get-caller-identity
# - Test Bedrock access: aws bedrock list-foundation-models --region us-east-1
# - Test AgentCore access: python -c "from bedrock_agentcore.tools import BrowserClient; print('AgentCore SDK ready!')"